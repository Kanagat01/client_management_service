version: "3.8"

services:
  db:
    image: postgres:15
    networks:
      - back
    volumes:
      - database:/var/lib/postgresql/data/
    env_file:
      - .env

  redis:
    image: redis
    networks:
      - back
    env_file:
      - .env
    ports:
      - "6379:6379"

  django-base:
    build:
      context: ./django_project
    image: django_project_base

  django_project:
    image: django_project_base 
    command: daphne -b 0.0.0.0 -p 8000 backend.asgi:application
    networks:
      - back
    volumes:
      - ./django_project/:/usr/src/app/
      - static_volume:/home/app/staticfiles
      - media_volume:/home/app/mediafiles
    ports:
      - "8000:8000"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - DJANGO_SETTINGS_MODULE=backend.settings
    env_file:
      - .env
    depends_on:
      - db
      - redis

  django-qcluster:
    image: django_project_base 
    command: python manage.py qcluster
    networks:
      - back
    volumes:
      - ./django_project/:/usr/src/app/
    env_file:
      - .env
    depends_on:
      - db

  tgbot:
    image: django_project_base 
    command: python tgbot/bot.py
    networks:
      - back
    volumes:
      - ./django_project/:/usr/src/app/
    env_file:
      - .env
    depends_on:
      - db

  nginx:
    build: ./nginx
    networks:
      - front
      - back
    volumes:
      - static_volume:/home/app/staticfiles
      - media_volume:/home/app/mediafiles
      # - /etc/letsencrypt/live/cargonika.ru/fullchain.pem:/certificate/cargonika_cert.pem:ro
      # - /etc/letsencrypt/live/cargonika.ru/privkey.pem:/certificate/cargonika_key.pem:ro
      # - /etc/letsencrypt/live/backend.cargonika.ru/fullchain.pem:/certificate/backend_cargonika_cert.pem:ro
      # - /etc/letsencrypt/live/backend.cargonika.ru/privkey.pem:/certificate/backend_cargonika_key.pem:ro

    ports:
      - '80:80'
      - '443:443'
    env_file:
      - .env
    depends_on:
      - django_project
      - react_app
    restart: always

  react_app:
    build: ../frontend
    networks:
      - front
    volumes:
      - ./react_app/:/usr/src/app/
    ports:
      - "3000:3000"
    env_file:
      - ../frontend/.env
    depends_on:
      - django_project

volumes:
  database:
  static_volume:
  media_volume:
  ssl_volume:


networks:
  front:
  back:
